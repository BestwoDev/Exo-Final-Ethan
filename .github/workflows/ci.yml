name: CI/CD Pipeline # Nom du pipeline

on:
  push:
    branches:
      - main # Lance le pipeline à chaque fois qu'on fait un push

jobs:
  build:
    runs-on: ubuntu-latest # Spécifie qu'on utilise la dernière version d'Ubuntu pour exécuter ce pipeline

    steps:
      - name: Checkout code # Étape 1 : Récupérer le code de la branche main
        uses: actions/checkout@v2

      - name: Set up Docker Buildx # Étape 2 : Je configure doocker buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub # Étape 3 : Je me connecte à docker hub pour envoyer l'image
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }} # Utilise le nom d'utilisateur Docker depuis les secrets GitHub
          password: ${{ secrets.DOCKER_PASSWORD }} # Utilise le mot de passe Docker depuis les secrets GitHub

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: . # Le contexte est le répertoire actuel
          file: ./dockerfile # le fichier Dockerfile pour construire l'image
          push: true # Envoie l'image sur le docker
          tags: ${{ secrets.DOCKER_USERNAME }}/exo-final-ethan:latest # Tag de l'image envoyé sur Docker Hub

# Inspiré de tuto YouTube & sites Internet
